// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.24.3
// source: Listinventory.proto

package __

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	InventoryListingService_ListInventory_FullMethodName = "/listInventory.InventoryListingService/ListInventory"
)

// InventoryListingServiceClient is the client API for InventoryListingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type InventoryListingServiceClient interface {
	// ListInventory returns a list of current inventory items.
	ListInventory(ctx context.Context, in *ListInventoryRequest, opts ...grpc.CallOption) (*ListInventoryResponse, error)
}

type inventoryListingServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewInventoryListingServiceClient(cc grpc.ClientConnInterface) InventoryListingServiceClient {
	return &inventoryListingServiceClient{cc}
}

func (c *inventoryListingServiceClient) ListInventory(ctx context.Context, in *ListInventoryRequest, opts ...grpc.CallOption) (*ListInventoryResponse, error) {
	out := new(ListInventoryResponse)
	err := c.cc.Invoke(ctx, InventoryListingService_ListInventory_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InventoryListingServiceServer is the server API for InventoryListingService service.
// All implementations must embed UnimplementedInventoryListingServiceServer
// for forward compatibility
type InventoryListingServiceServer interface {
	// ListInventory returns a list of current inventory items.
	ListInventory(context.Context, *ListInventoryRequest) (*ListInventoryResponse, error)
	mustEmbedUnimplementedInventoryListingServiceServer()
}

// UnimplementedInventoryListingServiceServer must be embedded to have forward compatible implementations.
type UnimplementedInventoryListingServiceServer struct {
}

func (UnimplementedInventoryListingServiceServer) ListInventory(context.Context, *ListInventoryRequest) (*ListInventoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListInventory not implemented")
}
func (UnimplementedInventoryListingServiceServer) mustEmbedUnimplementedInventoryListingServiceServer() {
}

// UnsafeInventoryListingServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to InventoryListingServiceServer will
// result in compilation errors.
type UnsafeInventoryListingServiceServer interface {
	mustEmbedUnimplementedInventoryListingServiceServer()
}

func RegisterInventoryListingServiceServer(s grpc.ServiceRegistrar, srv InventoryListingServiceServer) {
	s.RegisterService(&InventoryListingService_ServiceDesc, srv)
}

func _InventoryListingService_ListInventory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListInventoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InventoryListingServiceServer).ListInventory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: InventoryListingService_ListInventory_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InventoryListingServiceServer).ListInventory(ctx, req.(*ListInventoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// InventoryListingService_ServiceDesc is the grpc.ServiceDesc for InventoryListingService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var InventoryListingService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "listInventory.InventoryListingService",
	HandlerType: (*InventoryListingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListInventory",
			Handler:    _InventoryListingService_ListInventory_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "Listinventory.proto",
}
